" Plugged
call plug#begin('~/.vim/plugged')
  Plug '/usr/local/opt/fzf'
  Plug 'Valloric/YouCompleteMe'
  Plug 'airblade/vim-gitgutter'
  Plug 'albfan/nerdtree-git-plugin'
  Plug 'bling/vim-airline'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'elixir-lang/vim-elixir'
  Plug 'ervandew/supertab'
  Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
  Plug 'honza/vim-snippets'
  Plug 'isRuslan/vim-es6'
  Plug 'jiangmiao/auto-pairs'
  Plug 'jparise/vim-graphql'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'
  Plug 'kchmck/vim-coffee-script'
  Plug 'leafgarland/typescript-vim'
  Plug 'mxw/vim-jsx'
  Plug 'nathanaelkane/vim-indent-guides'
  Plug 'neovimhaskell/haskell-vim'
  Plug 'pangloss/vim-javascript'
  Plug 'posva/vim-vue'
  Plug 'prettier/vim-prettier', { 'do': 'yarn install', 'tag': '0.2.0' }
  Plug 'rhysd/vim-crystal'
  Plug 'rust-lang/rust.vim'
  Plug 'scrooloose/nerdcommenter'
  Plug 'scrooloose/nerdtree'
  Plug 'thoughtbot/vim-rspec'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-surround'
  Plug 'vim-airline/vim-airline-themes'
call plug#end()

" Text Formatting - General
set autoindent
set smartindent
set nowrap
set tabstop=4
set shiftwidth=2
set softtabstop=2
set expandtab
set nosmarttab
set encoding=utf-8
set shortmess+=c
set autoread

" Relative numbers
set relativenumber
set numberwidth=3
autocmd WinEnter,FocusGained * :setlocal number relativenumber
autocmd WinLeave,FocusLost   * :setlocal number norelativenumber

" Copy paste
if $TMUX == ''
  set clipboard+=unnamed
endif

" Switch words
nmap <silent> gw "_yiw:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR><C-o>:noh<CR>

" Special Case Text Formatting
au FileType python,go set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

" Language syntax highlighting
au BufNewFile,BufRead {Gemfile,Rakefile,Vagrantfile,config.ru}    set ft=ruby " random files that are ruby-esq
au BufNewFile,BufRead *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup() " markdown
au BufNewFile,BufRead *.json set ft=javascript " json
augroup filetype javascript syntax=javascript
au BufNewFile,BufRead *.babelrc set ft=javascript " babel
au BufNewFile,BufRead *.hamlc set ft=haml
au BufNewFile,BufRead *.{handlebars,hbs,ejs} set ft=html
au BufNewFile,BufRead *.cr set ft=crystal

" UI
set laststatus=2
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*,.node_modules
set number
set ruler
set nolazyredraw
set noshowcmd
set background=light

" Visual
set showmatch
set mat=5
set vb t_vb= " No Beeping or flashing...
set hlsearch
set incsearch
set ignorecase
set smartcase
set splitbelow
set splitright
syntax enable
syntax on

" Indent Guides
let g:indent_guides_guide_size=1
let g:indent_guide_start_level=1
let g:indent_guides_enable_on_vim_startup = 0
nmap <Leader>i <plug>IndentGuidesToggle<Esc>

" Configuration
set nocompatible
set nobackup
set nowritebackup
set noswapfile
filetype plugin indent on

" Mouse
set mouse=a

" Comments
map <Leader>/ <plug>NERDCommenterToggle<Esc>
imap <Leader>/ <Esc><plug>NERDCommenterToggle<Esc>

" C-# switches to tab
nmap <Leader>1 1gt
nmap <Leader>2 2gt
nmap <Leader>3 3gt
nmap <Leader>4 4gt
nmap <Leader>5 5gt
nmap <Leader>6 6gt

" Switch between panes more naturally
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Splits
noremap <leader>sc :close<CR>
noremap <leader>sh :sp<CR>
noremap <leader>sv :vsp<CR>


" NERDTree
function! ShowFileInNERDTree()
  if exists("t:NERDTreeBufName")
    NERDTreeFind
  else
    NERDTree
    wincmd l
    NERDTreeFind
  endif
endfunction

map <Leader>F :call ShowFileInNERDTree()<cr>
map <Leader>] :NERDTreeToggle<Esc>
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
let NERDTreeShowLineNumbers=1
let g:NERDTreeWinSize=70

" fzf"
let g:fzf_layout = { 'down': '~35%' }
nnoremap <Leader>f :Files<cr>
nnoremap <Leader>gs :GFiles?<cr>
nnoremap <Leader>gg :GGrep?<cr>

" fzf GGrep
command! -bang -nargs=* GGrep
  \ call fzf#vim#grep(
  \   'git grep --line-number '.shellescape(<q-args>), 0,
  \   { 'dir': systemlist('git rev-parse --show-toplevel')[0] }, <bang>0)

" Vim Airline
let g:airline_theme='base16'

" React
let g:jsx_ext_required = 0

" Flow
let g:javascript_plugin_flow = 0

" Rails/Rspec
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" YCM
let g:ycm_key_list_select_completion = ['<c-j>', '<Down>']
let g:ycm_key_list_previous_completion = ['<c-k>', '<Up>']
let g:SuperTabDefaultCompletionType = '<c-n>'
let g:ycm_server_use_vim_stdout = 1
let g:ycm_server_log_level = 'debug'
nnoremap <leader>jd :YcmCompleter GoTo<CR>

" Snippets
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" Splits
noremap <leader>sc :close<CR>
noremap <leader>sh :sp<CR>
noremap <leader>sv :vsp<CR>

" Prettier
let g:prettier#autoformat = 0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue Prettier

" ctags
set tags=tags
