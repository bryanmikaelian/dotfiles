" Plugged
call plug#begin('~/.vim/plugged')
  " Plug 'jistr/vim-nerdtree-tabs'
  "Plug 'isRuslan/vim-es6'
  "Plug 'kien/ctrlp.vim'
  Plug '/usr/local/opt/fzf'
  Plug 'Valloric/YouCompleteMe'
  Plug 'airblade/vim-gitgutter'
  Plug 'albfan/nerdtree-git-plugin'
  Plug 'bling/vim-airline'
  Plug 'elixir-lang/vim-elixir'
  Plug 'ervandew/supertab'
  Plug 'honza/vim-snippets'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'
  Plug 'kchmck/vim-coffee-script'
  Plug 'mitermayer/vim-prettier'
  Plug 'mxw/vim-jsx'
  Plug 'nathanaelkane/vim-indent-guides'
  Plug 'pangloss/vim-javascript'
  Plug 'posva/vim-vue'
  Plug 'raimondi/delimitmate'
  Plug 'rhysd/vim-crystal'
  Plug 'scrooloose/nerdcommenter'
  Plug 'scrooloose/nerdtree'
  Plug 'sirver/ultisnips'
  Plug 'thoughtbot/vim-rspec'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-surround'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'jparise/vim-graphql'
call plug#end()

" Text Formatting - General
set autoindent
set smartindent
set nowrap
set tabstop=4
set shiftwidth=2
set softtabstop=2
set expandtab
set nosmarttab
set encoding=utf-8
set relativenumber
set shortmess+=c
set autoread

" Copy paste
if $TMUX == ''
  set clipboard+=unnamed
endif

" Special Case Text Formatting
au FileType python,go set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

" Language syntax highlighting
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,Berksfile,Bowerfile,config.ru}    set ft=ruby " random files that are ruby-esq
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup() " markdown
au BufNewFile,BufRead *.json set ft=javascript " json
" au BufNewFile,BufRead *.es6 set ft=javascript " ES6
au BufNewFile,BufRead *.babelrc set ft=javascript " babel
au BufNewFile,BufRead *.hamlc set ft=haml
au BufNewFile,BufRead *.{handlebars,hbs,ejs} set ft=html
au BufNewFile,BufRead *.cr set ft=crystal

" UI
set laststatus=2
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*,.node_modules
set number
set ruler
set nolazyredraw
set noshowcmd
set background=light

" Visual
set showmatch
set mat=5
set vb t_vb= " No Beeping or flashing...
set hlsearch
set incsearch
set ignorecase
set smartcase
set splitbelow
set splitright
syntax enable
syntax on
set background=dark

" Indent Guides
let g:indent_guides_guide_size=1
let g:indent_guide_start_level=2
let g:indent_guides_enable_on_vim_startup = 0
nmap <Leader>i <plug>IndentGuidesToggle<Esc>

" Configuration
set nocompatible
set nobackup
set nowritebackup
set noswapfile
filetype plugin indent on

" Comments
map <Leader>/ <plug>NERDCommenterToggle<Esc>
imap <Leader>/ <Esc><plug>NERDCommenterToggle<Esc>

" C-# switches to tab
nmap <Leader>1 1gt
nmap <Leader>2 2gt
nmap <Leader>3 3gt
nmap <Leader>4 4gt
nmap <Leader>5 5gt
nmap <Leader>6 6gt

" Switch between panes more naturally
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Splits
noremap <leader>sc :close<CR>
noremap <leader>sh :sp<CR>
noremap <leader>sv :vsp<CR>

" netrw
let g:netrw_banner = 0
"let g:netrw_liststyle = 3
"let g:netrw_browse_split = 4
"let g:netrw_altv = 1
"let g:netrw_winsize = 25
"map <Leader>] :Explore</ESC>
"augroup ProjectDrawer
  "autocmd!
  "autocmd VimEnter * :Vexplore
  "set number
"augroup END


" NERDTree
function! ShowFileInNERDTree()
  if exists("t:NERDTreeBufName")
    NERDTreeFind
  else
    NERDTree
    wincmd l
    NERDTreeFind
  endif
endfunction

map <leader>f :call ShowFileInNERDTree()<cr>
map <Leader>] :NERDTreeToggle<Esc>
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
let NERDTreeShowLineNumbers=1
let g:NERDTreeWinSize=30

" fzf"
let g:fzf_layout = { 'down': '~15%' }
nnoremap <Leader>f :Files<cr>

" CtrlP
" let g:ctrlp_dont_split = 'NERD'
" let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|tmp'

" Vim Airline
let g:airline_theme='base16'

" React
let g:jsx_ext_required = 0

" Flow
let g:javascript_plugin_flow = 1

" Rails/Rspec
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" YCM
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" Snippets
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" JS
let g:javascript_plugin_flow = 1
let g:jsx_ext_required = 0

" vim-prettier
let g:prettier#config#print_width = 80
let g:prettier#config#tab_width = 2
let g:prettier#config#use_tabs = 'false'
let g:prettier#config#semi = 'true'
let g:prettier#config#single_quote = 'false'
let g:prettier#config#bracket_spacing = 'true'
let g:prettier#config#jsx_bracket_same_line = 'false'
let g:prettier#config#trailing_comma = 'all'
let g:prettier#config#parser = 'flow'

" Splits
noremap <leader>sc :close<CR>
noremap <leader>sh :sp<CR>
noremap <leader>sv :vsp<CR>
